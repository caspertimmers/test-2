# Generated by Django 3.2.11 on 2022-05-31 20:05

import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.images.blocks
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0066_collection_management_permissions"),
        ("snippets", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HoebaTypePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("kek", models.TextField(blank=True, verbose_name="Kek")),
                (
                    "jojo",
                    wagtail.core.fields.RichTextField(blank=True, verbose_name="Jojo"),
                ),
                (
                    "streaamit",
                    wagtail.core.fields.StreamField(
                        [
                            (
                                "daaate",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "daaate",
                                            wagtail.core.blocks.DateBlock(
                                                label="Daaate",
                                                required=True,
                                                validators=[],
                                            ),
                                        )
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        verbose_name="Streaamit",
                    ),
                ),
            ],
            options={
                "verbose_name": "HoebaType",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="HomePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("header", models.TextField(blank=True, verbose_name="Header")),
                (
                    "content",
                    wagtail.core.fields.StreamField(
                        [
                            (
                                "paragraph",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "paragraph",
                                            wagtail.core.blocks.RichTextBlock(
                                                default="",
                                                features=[
                                                    "bold",
                                                    "italic",
                                                    "h2",
                                                    "h3",
                                                    "h4",
                                                    "h5",
                                                    "ol",
                                                    "ul",
                                                    "link",
                                                    "document",
                                                    "embed",
                                                ],
                                                label="Paragraph",
                                                required=True,
                                            ),
                                        )
                                    ]
                                ),
                            ),
                            (
                                "image",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                label="Image", required=True
                                            ),
                                        )
                                    ]
                                ),
                            ),
                            (
                                "quote",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "quote",
                                            wagtail.core.blocks.TextBlock(
                                                default="", label="Quote", required=True
                                            ),
                                        ),
                                        (
                                            "attribution",
                                            wagtail.core.blocks.TextBlock(
                                                default="",
                                                label="Attribution",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                        ],
                        blank=True,
                        verbose_name="Content",
                    ),
                ),
            ],
            options={
                "verbose_name": "Homepage",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="NewsOverviewPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
            ],
            options={
                "verbose_name": "News overview page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="OverviewPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("header", models.TextField(blank=True, verbose_name="Header")),
            ],
            options={
                "verbose_name": "Overview page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="NewsPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "content",
                    wagtail.core.fields.StreamField(
                        [
                            (
                                "paragraph",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "paragraph",
                                            wagtail.core.blocks.RichTextBlock(
                                                default="",
                                                features=[
                                                    "bold",
                                                    "italic",
                                                    "h2",
                                                    "h3",
                                                    "h4",
                                                    "h5",
                                                    "ol",
                                                    "ul",
                                                    "link",
                                                    "document",
                                                    "embed",
                                                ],
                                                label="Paragraph",
                                                required=True,
                                            ),
                                        )
                                    ]
                                ),
                            ),
                            (
                                "image",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                label="Image", required=True
                                            ),
                                        )
                                    ]
                                ),
                            ),
                            (
                                "quote",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "quote",
                                            wagtail.core.blocks.TextBlock(
                                                default="", label="Quote", required=True
                                            ),
                                        ),
                                        (
                                            "attribution",
                                            wagtail.core.blocks.TextBlock(
                                                default="",
                                                label="Attribution",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                        ],
                        blank=True,
                        verbose_name="Content",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="snippets.newscategory",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "News page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ContentPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "content",
                    wagtail.core.fields.StreamField(
                        [
                            (
                                "paragraph",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "paragraph",
                                            wagtail.core.blocks.RichTextBlock(
                                                default="",
                                                features=[
                                                    "bold",
                                                    "italic",
                                                    "h2",
                                                    "h3",
                                                    "h4",
                                                    "h5",
                                                    "ol",
                                                    "ul",
                                                    "link",
                                                    "document",
                                                    "embed",
                                                ],
                                                label="Paragraph",
                                                required=True,
                                            ),
                                        )
                                    ]
                                ),
                            ),
                            (
                                "image",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                label="Image", required=True
                                            ),
                                        )
                                    ]
                                ),
                            ),
                            (
                                "quote",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "quote",
                                            wagtail.core.blocks.TextBlock(
                                                default="", label="Quote", required=True
                                            ),
                                        ),
                                        (
                                            "attribution",
                                            wagtail.core.blocks.TextBlock(
                                                default="",
                                                label="Attribution",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                        ],
                        blank=True,
                        verbose_name="Content",
                    ),
                ),
                (
                    "related_pages",
                    wagtail.core.fields.StreamField(
                        [
                            (
                                "relatedpage",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "related_page",
                                            wagtail.core.blocks.PageChooserBlock(
                                                label="Related page",
                                                page_type=[],
                                                required=True,
                                            ),
                                        )
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        verbose_name="Related pages",
                    ),
                ),
                ("header", models.TextField(blank=True, verbose_name="Header")),
                (
                    "downloads",
                    wagtail.core.fields.StreamField(
                        [
                            (
                                "download",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "download",
                                            wagtail.documents.blocks.DocumentChooserBlock(
                                                label="Download", required=True
                                            ),
                                        )
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        verbose_name="Downloads",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="snippets.contentcategory",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Content page",
            },
            bases=("wagtailcore.page",),
        ),
    ]
